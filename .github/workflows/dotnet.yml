name: Build and Test

on:
  push:
    branches:
      - 'main'
      - 'releases/*'
  pull_request:
    branches:
      - 'main'
      - 'releases/*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Get .NET Core Version
        run: dotnet --version > dotnet_version.txt

      - name: Read .NET Core Version from File
        id: dotnet_version
        run: echo "::set-output name=version::$(cat dotnet_version.txt)"

      - name: Install .NET Core
        run: |
          DOTNET_VERSION=${{ steps.dotnet_version.outputs.version }}
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            choco install dotnet-sdk --version $DOTNET_VERSION
          else
            wget https://dotnet.microsoft.com/en-us/download/dotnet/thank-you/sdk-7.0.404-linux-arm64-binaries
            mkdir -p $HOME/dotnet
            tar zxf dotnet-sdk-$DOTNET_VERSION-linux-x64.tar.gz -C $HOME/dotnet
            export PATH=$HOME/dotnet:$PATH
          fi

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ steps.dotnet_version.outputs.version }}

      - name: Change Directory and Run Commands
        run: |
          cd OperationResult.Net
          dotnet restore
          dotnet build --configuration Release
          dotnet test
