name: Code Vulnerability Check

on:
  push:
    branches:
      - 'main'
      - 'releases/*'
  pull_request:
    branches:
      - 'main'
      - 'releases/*'

jobs:
  security_scan:
    runs-on: ubuntu-latest

    env:
      PROJECT_NAME: OperationResult
      SOLUTION_DIRECTORY: OperationResult.Net

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Get .NET Version from Project File
      id: get-dotnet-version
      run: echo "::set-output name=version::$(grep -oP '<TargetFramework>(.*)<\/TargetFramework>' YourProject.csproj | grep -oP '\d\.\d')"

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ steps.get-dotnet-version.outputs.version }}

    - name: Restore dependencies
      run: |
        cd ${{ env.SOLUTION_DIRECTORY }}
        dotnet restore

    - name: Update package list
      run: sudo apt-get update

    - name: Install Python and pip
      run: |
        sudo apt-get install -y python3 python3-pip
        python3 -m pip install --upgrade pip

    - name: Install OWASP Dependency-Check
      run: |
        sudo apt-get install -y openjdk-11-jre
        pip install --upgrade pip
        pip install --no-cache-dir --user dependency-check
    
        # Add debug info
        ls -la $HOME/.local/bin
        which dependency-check
    
        # Run Dependency-Check if it exists
        if [ -x "$HOME/.local/bin/dependency-check" ]; then
          $HOME/.local/bin/dependency-check --scan . --project ${{ env.PROJECT_NAME }} --out $HOME/dependency-check
        else
          echo "dependency-check executable not found"
        fi



    - name: Upload results
      if: ${{ success() }}
      uses: actions/upload-artifact@v2
      with:
        name: dependency-check-results
        path: $HOME/dependency-check
